{"remainingRequest":"/home/co/crypt/node_modules/thread-loader/dist/cjs.js!/home/co/crypt/node_modules/babel-loader/lib/index.js!/home/co/crypt/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/co/crypt/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/co/crypt/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/co/crypt/src/components/HelloWorld.vue","mtime":1552672593807},{"path":"/home/co/crypt/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/co/crypt/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/co/crypt/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/co/crypt/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/co/crypt/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport _parseFloat from \"/home/co/crypt/node_modules/@babel/runtime-corejs2/core-js/parse-float\";\nimport _parseInt from \"/home/co/crypt/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { GoogleCharts } from 'google-charts';\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      info: null,\n      dataArray: [],\n      change: 'bitcoin',\n      interval: 'm30',\n      intervalMilliseconds: 360000,\n      base: 'ethereum',\n      timeStart: '1551599885000',\n      timeEnd: '1551686584000',\n      PorogPercent: 0,\n      volume: 0\n    };\n  },\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  methods: {\n    setPorogVolumePercent: function setPorogVolumePercent(P) {\n      this.volume = P;\n    },\n    newTimeStart: function newTimeStart(d) {\n      var year = _parseInt(d[0] + d[1] + d[2] + d[3]);\n\n      var month = _parseInt(d[5] + d[6]) - 1;\n\n      var day = _parseInt(d[8] + d[9]);\n\n      var time = new Date();\n      time.setTime(0);\n      time.setYear(year);\n      time.setMonth(month);\n      time.setDate(day); // console.log(time,day,':',month,':',year)\n\n      this.timeStart = +time; // console.log(this.timeStart)\n    },\n    newTimeEnd: function newTimeEnd(d) {\n      var year = _parseInt(d[0] + d[1] + d[2] + d[3]);\n\n      var month = _parseInt(d[5] + d[6]) - 1;\n\n      var day = _parseInt(d[8] + d[9]);\n\n      var time = new Date();\n      time.setTime(0);\n      time.setYear(year);\n      time.setMonth(month);\n      time.setDate(day); // console.log(time,day,':',month,':',year)\n\n      this.timeEnd = +time;\n    },\n    selectTimeSet: function selectTimeSet(timeLength) {\n      var minute = 60000;\n      this.interval = timeLength;\n\n      switch (timeLength) {\n        case \"m30\":\n          this.intervalMilliseconds = 30 * minute;\n          break;\n\n        case \"m15\":\n          this.intervalMilliseconds = 15 * minute;\n          break;\n\n        case \"m5\":\n          this.intervalMilliseconds = 5 * minute;\n          break;\n\n        case \"h1\":\n          this.intervalMilliseconds = 60 * minute;\n          break;\n      } // console.log(\"ты выбрал \",timeLength);\n\n    },\n    newV: function newV(V) {\n      // console.log('чет то да сделаем')\n      this.base = V;\n    },\n    setPorogPercent: function setPorogPercent(P) {\n      this.PorogPercent = _parseFloat(P);\n    },\n    RUN: function RUN() {\n      this.dataArray = [0, 1, 2, 3];\n      this.GO(this.timeStart, this.timeEnd, this.PorogPercent, this.change, this.interval, this.base, 'лог консоли');\n    },\n    GO: function GO(timeStart, timeEnd, PorogPercent, change, interval, base, consolelog) {\n      var _this = this;\n\n      var dayLenght = 86400000; // var info;\n\n      console.log('https://api.coincap.io/v2/candles?exchange=binance&interval=' + interval + '&baseId=' + base + '&quoteId=' + change + '&start=' + timeStart + '&end=' + timeEnd);\n      axios.get('https://api.coincap.io/v2/candles?exchange=binance&interval=' + interval + '&baseId=' + base + '&quoteId=' + change + '&start=' + timeStart + '&end=' + timeEnd).then(function (value) {\n        // alert('go')\n        var info = value.data.data;\n\n        _this.percent(info); // console.log(consolelog)\n\n\n        console.log(info);\n      }, function (reason) {\n        // D=new Date();\n        alert(reason);\n      });\n    },\n    percent: function percent(info) {\n      this.info = info;\n      var dataArr = new Array();\n      console.log(\"info.lenght\", info.length);\n\n      for (var i = 1; i < info.length; i++) {\n        var P = (info[i].close - info[i].open) / info[i].close * 100;\n        var PVolume = (info[i].volume - info[i - 1].volume) / info[i - 1].volume * 100;\n\n        if (P > this.PorogPercent && PVolume > this.volume) {\n          var d = new Date();\n          d.setTime(info[i].period);\n          d = d.toString();\n          dataArr.push({\n            percent: P.toFixed(2),\n            date: d,\n            increase: ((info[i].volume - info[i - 1].volume) / info[i - 1].volume * 100).toFixed(3),\n            price: info[i].close\n          });\n        }\n      }\n\n      this.dataArray = dataArr; // console.log(\"data\",A)\n    }\n  },\n  mounted: function mounted() {//по загрузке\n  }\n};",{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n  <!-- sudo sysctl fs.inotify.max_user_watches=524288 -->\n\n  <!-- <div @mouseover=\"RUN()\">Ну шо, погнали</div> -->\n  <div id=\"inf\">\n    <h1>Ищем памп</h1>\n    Курс {{base}} по отношению к {{change}}<br><br>\n    <div id=\"inputBlock\">\n      <p>введите валюту</p>\n      <input type=\"text\" @input=\"newV($event.target.value)\" value=\"ethereum\"> или выберете из списка \n      <select @input=\"newV($event.target.value)\">\n          <option>ethereum</option>\n          <option>tron</option>\n          <option>stellar</option>\n          <option>verge</option>\n          <option>zilliqa</option>\n          <option>cardano</option>\n        </select> \n      <br>\n      <p>введите временной отрезок поиска</p>\n      <input type=\"date\" @input=\"newTimeStart($event.target.value)\">\n      <input type=\"date\" @input=\"newTimeEnd($event.target.value)\">\n      <p>введите тип свечи\n        <select @input=\"selectTimeSet($event.target.value)\">\n          <option>m30</option>\n          <option>m5</option>\n          <option>m15</option>\n          <option>h1</option>\n        </select>\n      </p>\n      <p>Введите % роста цены</p>\n      <input type=\"text\" @input=\"setPorogPercent($event.target.value)\">\n      <p>Введите % роста объемов</p>\n      <input type=\"text\" @input=\"setPorogVolumePercent($event.target.value)\">\n  <!--     <p>Количество свечей выводимых на дисплей</p>\n      <input type=\"text\"> -->\n      <p>\n        <button @click=\"RUN()\">Рассчитать</button>\n      </p>\n    </div>\n    <!-- <p>{{info}}</p> -->\n    <div id=\"flexDiv\">\n      <div id=\"cryptoOutput\" v-for=\"data in dataArray\">\n        <div id=\"tabblock\"></div>\n        <p>{{data.date}}</p>\n        <p>прирост цены %:{{data.percent}}</p>\n        <p>прирост объёма в % :{{data.increase}}</p>\n        <p>цена: {{data.price}}</p>\n      </div>\n    </div>\n  </div>\n  <div id=\"chart_div\"></div>\n  \n  </div>\n</template>\n\n<script>\nimport {GoogleCharts} from 'google-charts'\nimport axios from 'axios'\n\nexport default {\n  data(){\n    return {\n      info: null,\n      dataArray: [],\n      change: 'bitcoin',\n      interval: 'm30',\n      intervalMilliseconds: 360000,\n      base:'ethereum',\n      timeStart:'1551599885000',\n      timeEnd:'1551686584000',\n      PorogPercent:0,\n      volume:0\n    }\n  },\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  methods: {\n    setPorogVolumePercent(P){\n      this.volume=P;\n    },\n    newTimeStart(d){\n      let year = parseInt(d[0]+d[1]+d[2]+d[3])\n      let month = parseInt(d[5]+d[6])-1\n      let day = parseInt(d[8]+d[9])\n      var time = new Date();\n      time.setTime(0);\n      time.setYear(year);\n      time.setMonth(month);\n      time.setDate(day);\n        // console.log(time,day,':',month,':',year)\n      this.timeStart=+time;\n      // console.log(this.timeStart)\n\n    },\n    newTimeEnd(d){\n      let year = parseInt(d[0]+d[1]+d[2]+d[3])\n      let month = parseInt(d[5]+d[6])-1\n      let day = parseInt(d[8]+d[9])\n      var time = new Date();\n      time.setTime(0);\n      time.setYear(year);\n      time.setMonth(month);\n      time.setDate(day);\n        // console.log(time,day,':',month,':',year)\n      this.timeEnd=+time;\n    },\n    selectTimeSet(timeLength){\n      const minute = 60000;\n      this.interval=timeLength;\n      switch(timeLength){\n        case \"m30\":this.intervalMilliseconds = 30*minute; break;\n        case \"m15\":this.intervalMilliseconds = 15*minute; break;\n        case \"m5\":this.intervalMilliseconds = 5*minute; break;\n        case \"h1\":this.intervalMilliseconds = 60*minute; break;\n      }\n      // console.log(\"ты выбрал \",timeLength);\n    },\n    newV(V){\n      // console.log('чет то да сделаем')\n      this.base=V;\n    },\n    setPorogPercent(P){\n      this.PorogPercent=parseFloat(P)\n    },\n    RUN(){\n      this.dataArray=[0,1,2,3];\n      this.GO(this.timeStart,this.timeEnd,this.PorogPercent,this.change,this.interval,this.base,'лог консоли');\n    },\n\n    GO(timeStart,timeEnd,PorogPercent,change,interval,base,consolelog){\n      const dayLenght=86400000\n      // var info;\n      console.log('https://api.coincap.io/v2/candles?exchange=binance&interval='+\n          interval+'&baseId='+base+'&quoteId='+change+\n          '&start='+timeStart+'&end='+timeEnd)\n      axios\n        .get('https://api.coincap.io/v2/candles?exchange=binance&interval='+\n          interval+'&baseId='+base+'&quoteId='+change+\n          '&start='+timeStart+'&end='+timeEnd)\n        .then(\n          value => {\n          // alert('go')\n            let info = value.data.data;\n            this.percent(info)\n            // console.log(consolelog)\n            console.log(info)        \n          },reason => {\n            // D=new Date();\n            alert(reason)\n        });\n    },\n    percent(info){\n      this.info = info\n      let dataArr=new Array;\n      console.log(\"info.lenght\",info.length)\n      for(let i = 1;i<info.length;i++){\n        let P = (info[i].close-info[i].open)/info[i].close*100;\n        let PVolume = (info[i].volume-info[i-1].volume)/info[i-1].volume*100;\n        if ((P>this.PorogPercent)&&(PVolume>this.volume)){\n          let d = new Date();\n          d.setTime(info[i].period)\n          d=d.toString();\n          dataArr.push({\n            percent:P.toFixed(2),\n            date:d,\n            increase: ((info[i].volume-info[i-1].volume)/info[i-1].volume*100).toFixed(3),\n            price: info[i].close\n          });\n        }\n      }\n      this.dataArray=dataArr;\n      // console.log(\"data\",A)\n    }\n  },   \n\n  mounted(){//по загрузке\n    \n  }\n}\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n#flexDiv{\n  display: -webkit-flex; \n display: inline-flex; \n flex-direction: column; \n /*grid-template-columns:1fr;*/\n}\n  #cryptoOutput{\n/*grid-template-rows:1fr;*/\n/*grid-column: 1;*/\n    background: rgb(16, 4, 43);\n    color: rgb(52, 230, 16);\n    width: 600px;\n    /*border:5px;*/\n    position: relative;\n    /*left: 50%;*/\n    /*transform: translate(-50%, 0%);*/\n    text-align: left;\n  }\n\n  #inputBlock{\n    background: grey;\n    color: black;\n  /*margin:5px;*/\n    \n      padding: 5px;\n    /*margin: 5px;*/\n    /*border: 50px;*/\n\n  }\n  #tabblock{\n    height: 10px;\n    background: black;\n  }\n  #chart_div{\n    margin:0px;\n    /*width: 850px;*/\n    position: relative;\n\n  }\n  #inf {\n    /*padding: 5px;*/\n    /*margin:0px;*/\n    background: black;\n    color: rgb(52, 230, 16);\n    position: relative;\n      /*padding: 0px;*/\n    /*margin: 0px;*/\n    /*border: 0px;*/\n  }\n  h3 {\n    /*margin: 40px 0 0;*/\n  }\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  li {\n    display: inline-block;\n    /*margin: 0 10px;*/\n  }\n  a {\n    color: #42b983;\n  }\n</style>\n"],"sourceRoot":"src/components"}]}