{"remainingRequest":"/home/co/crypt/node_modules/babel-loader/lib/index.js!/home/co/crypt/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/co/crypt/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/co/crypt/src/components/Mobile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/co/crypt/src/components/Mobile.vue","mtime":1553520247936},{"path":"/home/co/crypt/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/co/crypt/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/co/crypt/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/co/crypt/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseFloat from \"/home/co/crypt/node_modules/@babel/runtime-corejs2/core-js/parse-float\";\nimport _parseInt from \"/home/co/crypt/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { GoogleCharts } from 'google-charts';\nimport axios from 'axios';\nimport DataChart from './avarageComponent.vue';\nexport default {\n  components: {\n    DataChart: DataChart\n  },\n  data: function data() {\n    return {\n      info: null,\n      dataArray: [],\n      change: 'bitcoin',\n      interval: 'm30',\n      intervalMilliseconds: 360000,\n      base: 'ethereum',\n      timeStart: '1551599885000',\n      timeEnd: '1551686584000',\n      porogPercent: 0,\n      volume: 0\n    };\n  },\n  name: 'Main',\n  methods: {\n    setPorogVolumePercent: function setPorogVolumePercent(p) {\n      this.volume = p;\n    },\n    newTimeStart: function newTimeStart(d) {\n      var year = _parseInt(d[0] + d[1] + d[2] + d[3]);\n\n      var month = _parseInt(d[5] + d[6]) - 1;\n\n      var day = _parseInt(d[8] + d[9]);\n\n      var time = new Date();\n      time.setTime(0);\n      time.setYear(year);\n      time.setMonth(month);\n      time.setDate(day);\n      this.timeStart = +time;\n    },\n    newTimeEnd: function newTimeEnd(d) {\n      var year = _parseInt(d[0] + d[1] + d[2] + d[3]);\n\n      var month = _parseInt(d[5] + d[6]) - 1;\n\n      var day = _parseInt(d[8] + d[9]);\n\n      var time = new Date();\n      time.setTime(0);\n      time.setYear(year);\n      time.setMonth(month);\n      time.setDate(day);\n      this.timeEnd = +time;\n    },\n    selectTimeSet: function selectTimeSet(timeLength) {\n      var minute = 60000;\n      this.interval = timeLength;\n\n      switch (timeLength) {\n        case \"m30\":\n          this.intervalMilliseconds = 30 * minute;\n          break;\n\n        case \"m15\":\n          this.intervalMilliseconds = 15 * minute;\n          break;\n\n        case \"m5\":\n          this.intervalMilliseconds = 5 * minute;\n          break;\n\n        case \"h1\":\n          this.intervalMilliseconds = 60 * minute;\n          break;\n      }\n    },\n    newV: function newV(v) {\n      this.base = v;\n    },\n    setPorogPercent: function setPorogPercent(p) {\n      this.porogPercent = _parseFloat(p);\n    },\n    main: function main() {\n      this.calc(this.timeStart, this.timeEnd, this.porogPercent, this.change, this.interval, this.base, 'лог консоли');\n    },\n    calc: function calc(timeStart, timeEnd, porogPercent, change, interval, base, consolelog) {\n      var _this = this;\n\n      var dayLenght = 86400000;\n      console.log('https://api.coincap.io/v2/candles?exchange=binance&interval=' + interval + '&baseId=' + base + '&quoteId=' + change + '&start=' + timeStart + '&end=' + timeEnd);\n      axios.get('https://api.coincap.io/v2/candles?exchange=binance&interval=' + interval + '&baseId=' + base + '&quoteId=' + change + '&start=' + timeStart + '&end=' + timeEnd).then(function (value) {\n        var info = value.data.data;\n\n        _this.percent(info);\n\n        console.log(info);\n      }, function (reason) {\n        alert(reason);\n      });\n    },\n    percent: function percent(info) {\n      this.info = info;\n      var dataArr = new Array();\n      console.log(\"info.lenght\", info.length);\n\n      for (var i = 1; i < info.length; i++) {\n        var p = (info[i].close - info[i].open) / info[i].close * 100;\n        var pVolume = (info[i].volume - info[i - 1].volume) / info[i - 1].volume * 100;\n\n        if (p > this.porogPercent && pVolume > this.volume) {\n          var d = new Date();\n          d.setTime(info[i].period);\n          dataArr.push({\n            percent: p.toFixed(2),\n            // date:d,\n            date: {\n              month: d.getMonth(),\n              year: d.getYear(),\n              day: d.getDay()\n            },\n            time: {\n              minutes: d.getMinutes(),\n              hours: d.getHours()\n            },\n            increase: ((info[i].volume - info[i - 1].volume) / info[i - 1].volume * 100).toFixed(3),\n            price: info[i].close\n          });\n        }\n      }\n\n      this.dataArray = dataArr;\n    }\n  },\n  mounted: function mounted() {//по загрузке\n  }\n};",{"version":3,"sources":["Mobile.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n  \n  <!-- sudo sysctl fs.inotify.max_user_watches=524288 -->\n\n  <div id=\"inf\">\n    <h1>Ищем памп</h1>\n    Курс {{base}} по отношению к {{change}}<br><br>\n    <div id=\"inputBlock\">\n      <p>введите валюту</p>\n      <input type=\"text\" @input=\"newV($event.target.value)\" value=\"ethereum\"> или выберете из списка \n      <select @input=\"newV($event.target.value)\">\n          <option>ethereum</option>\n          <option>tron</option>\n          <option>stellar</option>\n          <option>verge</option>\n          <option>zilliqa</option>\n          <option>cardano</option>\n        </select> \n      <br>\n      <p>введите временной отрезок поиска</p>\n      <input type=\"date\" @input=\"newTimeStart($event.target.value)\">\n      <input type=\"date\" @input=\"newTimeEnd($event.target.value)\">\n      <p>введите тип свечи\n        <select @input=\"selectTimeSet($event.target.value)\">\n          <option>m30</option>\n          <option>m5</option>\n          <option>m15</option>\n          <option>h1</option>\n        </select>\n      </p>\n      <p>Введите % роста цены</p>\n      <input type=\"text\" @input=\"setPorogPercent($event.target.value)\">\n      <p>Введите % роста объемов</p>\n      <input type=\"text\" @input=\"setPorogVolumePercent($event.target.value)\">\n  <!--     <p>Количество свечей выводимых на дисплей</p>\n      <input type=\"text\"> -->\n      <p>\n        <button @click=\"main()\">Рассчитать</button>\n      </p>\n    </div>\n    <!-- <p>{{info}}</p> -->\n    <div id=\"flexDiv\">\n      <div id=\"cryptoOutput\" v-for=\"data in dataArray\">\n        <div id=\"tabblock\"></div>\n        <p>{{data.date.day}}:{{data.date.month}}:{{data.date.year}}</p>\n        <p>{{data.time.hours}}:{{data.time.minutes}}</p>\n        <p>прирост цены %:{{data.percent}}</p>\n        <p>прирост объёма в % :{{data.increase}}</p>\n        <p>цена: {{data.price}}</p>\n        <!-- <DataChart time=\"Живи \"/> -->\n      </div>\n    </div>\n  </div>\n  <div id=\"chart_div\"></div>\n  \n  </div>\n</template>\n\n<script>\n\nimport {GoogleCharts} from 'google-charts'\nimport axios from 'axios'\nimport DataChart from './avarageComponent.vue'\n\nexport default {\n  components:{\n    DataChart\n  },\n  data(){\n    return {\n      info: null,\n      dataArray: [],\n      change: 'bitcoin',\n      interval: 'm30',\n      intervalMilliseconds: 360000,\n      base:'ethereum',\n      timeStart:'1551599885000',\n      timeEnd:'1551686584000',\n      porogPercent:0,\n      volume:0\n    }\n  },\n\n  name: 'Main',\n\n  methods: {\n    setPorogVolumePercent(p){\n      this.volume=p;\n    },\n\n    newTimeStart(d){\n      let year = parseInt(d[0]+d[1]+d[2]+d[3]);\n      let month = parseInt(d[5]+d[6])-1;\n      let day = parseInt(d[8]+d[9]);\n      var time = new Date();\n      time.setTime(0);\n      time.setYear(year);\n      time.setMonth(month);\n      time.setDate(day);\n      this.timeStart=+time;\n    },\n\n    newTimeEnd(d){\n      let year = parseInt(d[0]+d[1]+d[2]+d[3]);\n      let month = parseInt(d[5]+d[6])-1;\n      let day = parseInt(d[8]+d[9]);\n      var time = new Date();\n      time.setTime(0);\n      time.setYear(year);\n      time.setMonth(month);\n      time.setDate(day);\n      this.timeEnd=+time;\n    },\n\n    selectTimeSet(timeLength){\n      const minute = 60000;\n      this.interval=timeLength;\n\n      switch(timeLength){\n        case \"m30\":this.intervalMilliseconds = 30*minute; break;\n        case \"m15\":this.intervalMilliseconds = 15*minute; break;\n        case \"m5\":this.intervalMilliseconds = 5*minute; break;\n        case \"h1\":this.intervalMilliseconds = 60*minute; break;\n      }\n    },\n\n    newV(v){\n      this.base=v;\n    },\n\n    setPorogPercent(p){\n      this.porogPercent=parseFloat(p);\n    },\n\n    main(){\n      this.calc(this.timeStart, this.timeEnd, this.porogPercent,\n        this.change, this.interval, this.base, 'лог консоли');\n    },\n\n    calc(timeStart, timeEnd, porogPercent,change, interval, base, consolelog){\n      const dayLenght=86400000;\n      console.log(\n        'https://api.coincap.io/v2/candles?exchange=binance&interval='+\n        interval+'&baseId='+base+'&quoteId='+change+'&start='+timeStart+'&end='\n        +timeEnd\n      );\n      \n      axios\n        .get('https://api.coincap.io/v2/candles?exchange=binance&interval='+\n          interval+'&baseId='+base+'&quoteId='+change+'&start='+timeStart+'&end='+timeEnd)\n        .then(\n          value => {\n            let info = value.data.data;\n            this.percent(info);\n            console.log(info);      \n          },reason => {\n            alert(reason);\n          }\n        );\n    },\n\n    percent(info){\n      this.info = info;\n      let dataArr=new Array;\n      console.log(\"info.lenght\", info.length)\n\n      for(let i = 1;i<info.length;i++){\n        let p = (info[i].close-info[i].open)/info[i].close*100;\n        let pVolume = (info[i].volume-info[i-1].volume)/\n                      info[i-1].volume*100;\n        \n        if ((p>this.porogPercent)&&(pVolume>this.volume)){\n          let d = new Date();\n          d.setTime(info[i].period)\n\n          dataArr.push({\n            percent:p.toFixed(2),\n            // date:d,\n            date:{\n              month:d.getMonth(),\n              year:d.getYear(),\n              day:d.getDay()\n            },\n            time:{\n              minutes:d.getMinutes(),\n              hours:d.getHours()\n            },\n            increase: ((info[i].volume-info[i-1].volume)/\n              info[i-1].volume*100).toFixed(3),\n            price: info[i].close\n          });\n        }\n      }\n\n      this.dataArray=dataArr;\n    }\n  },   \n\n  mounted(){//по загрузке\n  }\n}\n\n</script>\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n\n#flexDiv{\n  display: -webkit-flex; \n  display: inline-flex; \n  flex-direction: column; \n}\n\n  #cryptoOutput{\n/*grid-template-rows:1fr;*/\n/*grid-column: 1;*/\n    color: rgb(52, 230, 16);\n    background: rgb(16, 4, 43);\n    width: 600px;\n    /*border:5px;*/\n    position: relative;\n    /*left: 50%;*/\n    /*transform: translate(-50%, 0%);*/\n    text-align: left;\n    padding-left:15px; \n  }\n\n  #inputBlock{\n    background: grey;\n    color: black;\n  /*margin:5px;*/\n    \n      padding: 5px;\n    /*margin: 5px;*/\n    /*border: 50px;*/\n\n  }\n  #tabblock{\n    height: 10px;\n    background: black;\n  }\n  #chart_div{\n    margin:0px;\n    /*width: 850px;*/\n    position: relative;\n\n  }\n  #inf {\n    /*padding: 5px;*/\n    /*margin:0px;*/\n    background: black;\n    color: rgb(52, 230, 16);\n    position: relative;\n      /*padding: 0px;*/\n    /*margin: 0px;*/\n    /*border: 0px;*/\n  }\n  h3 {\n    /*margin: 40px 0 0;*/\n  }\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  li {\n    display: inline-block;\n    /*margin: 0 10px;*/\n  }\n  a {\n    color: #42b983;\n  }\n</style>\n"],"sourceRoot":"src/components"}]}